How did viewing a diff between two versions of a file help you see the bug that
 was introduced?
Focused in on the area that could have possible issues.



How could having easy access to the entire history of a file make you a more
 efficient programmer in the long term?
I'm not wasting time comparing every line of code.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros - The commits are broken down in segments logically with notes. Remembering where you committed is easier than when versions are automatically saved for you.
Cons - User may forget to commit making it hard to find git diff. Commits may be either done too early or too late for easy comparison.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
They have their advantages depending on what they are being used for. For writing code, saving the entire file seems to have no advantages.

How can you use the commands git log and git diff to view the history of files?
Through cmd or bash.

How might using version control make you more confident to make changes that could break something?
Reverting back to a previous version is not that difficult as long as commits are made periodically.

Now that you have your workspace set up, what do you want to try using Git for?
Anything to explore what can be done with Git.
